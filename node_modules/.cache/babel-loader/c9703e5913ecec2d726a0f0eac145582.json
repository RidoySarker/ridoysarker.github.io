{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/media/ridoy/Work/Documents/My Project/Project/Port/my-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _classCallCheck = require(\"/media/ridoy/Work/Documents/My Project/Project/Port/my-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/media/ridoy/Work/Documents/My Project/Project/Port/my-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Attractor = void 0;\n\nvar Utils_1 = require(\"../../../../Utils\");\n\nvar Attractor = /*#__PURE__*/function () {\n  function Attractor(container) {\n    _classCallCheck(this, Attractor);\n\n    this.container = container;\n  }\n\n  _createClass(Attractor, [{\n    key: \"interact\",\n    value: function interact(p1) {\n      var _a;\n\n      var container = this.container;\n      var options = container.options;\n      var distance = (_a = p1.linksDistance) !== null && _a !== void 0 ? _a : container.retina.linksDistance;\n      var pos1 = p1.getPosition();\n      var query = container.particles.quadTree.query(new Utils_1.Circle(pos1.x, pos1.y, distance));\n\n      var _iterator = _createForOfIteratorHelper(query),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var p2 = _step.value;\n\n          if (p1 === p2 || p2.particlesOptions.move.attract.enable) {\n            continue;\n          }\n\n          var pos2 = p2.getPosition();\n\n          var _Utils_1$Utils$getDis = Utils_1.Utils.getDistances(pos1, pos2),\n              dx = _Utils_1$Utils$getDis.dx,\n              dy = _Utils_1$Utils$getDis.dy;\n\n          var rotate = options.particles.move.attract.rotate;\n          var ax = dx / (rotate.x * 1000);\n          var ay = dy / (rotate.y * 1000);\n          p1.velocity.horizontal -= ax;\n          p1.velocity.vertical -= ay;\n          p2.velocity.horizontal += ax;\n          p2.velocity.vertical += ay;\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }, {\n    key: \"isEnabled\",\n    value: function isEnabled(particle) {\n      return particle.particlesOptions.move.attract.enable;\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {}\n  }]);\n\n  return Attractor;\n}();\n\nexports.Attractor = Attractor;","map":null,"metadata":{},"sourceType":"script"}