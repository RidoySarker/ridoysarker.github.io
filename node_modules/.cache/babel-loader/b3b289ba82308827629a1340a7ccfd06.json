{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/home/ridoy/Documents/My Project/Port/my-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _createForOfIteratorHelper = require(\"/home/ridoy/Documents/My Project/Port/my-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _classCallCheck = require(\"/home/ridoy/Documents/My Project/Port/my-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/ridoy/Documents/My Project/Port/my-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TextDrawer = void 0;\n\nvar tslib_1 = require(\"tslib\");\n\nvar Utils_1 = require(\"../Utils\");\n\nvar Enums_1 = require(\"../Enums\");\n\nvar TextDrawer = /*#__PURE__*/function () {\n  function TextDrawer() {\n    _classCallCheck(this, TextDrawer);\n  }\n\n  _createClass(TextDrawer, [{\n    key: \"init\",\n    value: function init(container) {\n      var _a;\n\n      return tslib_1.__awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var options, shapeOptions, _iterator, _step, character;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                options = container.options;\n\n                if (!(Utils_1.Utils.isInArray(Enums_1.ShapeType.char, options.particles.shape.type) || Utils_1.Utils.isInArray(Enums_1.ShapeType.character, options.particles.shape.type))) {\n                  _context.next = 26;\n                  break;\n                }\n\n                shapeOptions = (_a = options.particles.shape.options[Enums_1.ShapeType.character]) !== null && _a !== void 0 ? _a : options.particles.shape.options[Enums_1.ShapeType.char];\n\n                if (!(shapeOptions instanceof Array)) {\n                  _context.next = 23;\n                  break;\n                }\n\n                _iterator = _createForOfIteratorHelper(shapeOptions);\n                _context.prev = 5;\n\n                _iterator.s();\n\n              case 7:\n                if ((_step = _iterator.n()).done) {\n                  _context.next = 13;\n                  break;\n                }\n\n                character = _step.value;\n                _context.next = 11;\n                return Utils_1.Utils.loadFont(character);\n\n              case 11:\n                _context.next = 7;\n                break;\n\n              case 13:\n                _context.next = 18;\n                break;\n\n              case 15:\n                _context.prev = 15;\n                _context.t0 = _context[\"catch\"](5);\n\n                _iterator.e(_context.t0);\n\n              case 18:\n                _context.prev = 18;\n\n                _iterator.f();\n\n                return _context.finish(18);\n\n              case 21:\n                _context.next = 26;\n                break;\n\n              case 23:\n                if (!(shapeOptions !== undefined)) {\n                  _context.next = 26;\n                  break;\n                }\n\n                _context.next = 26;\n                return Utils_1.Utils.loadFont(shapeOptions);\n\n              case 26:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[5, 15, 18, 21]]);\n      }));\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(context, particle, radius) {\n      var character = particle.shapeData;\n\n      if (character === undefined) {\n        return;\n      }\n\n      var textData = character.value;\n\n      if (textData === undefined) {\n        return;\n      }\n\n      var textParticle = particle;\n\n      if (textParticle.text === undefined) {\n        textParticle.text = textData instanceof Array ? Utils_1.Utils.itemFromArray(textData, particle.randomIndexData) : textData;\n      }\n\n      var text = textParticle.text;\n      var style = character.style;\n      var weight = character.weight;\n      var size = Math.round(radius) * 2;\n      var font = character.font;\n      var fill = particle.fill;\n      var offsetX = text.length * radius / 2;\n      context.font = \"\".concat(style, \" \").concat(weight, \" \").concat(size, \"px \\\"\").concat(font, \"\\\"\");\n      var pos = {\n        x: -offsetX,\n        y: radius / 2\n      };\n\n      if (fill) {\n        context.fillText(text, pos.x, pos.y);\n      } else {\n        context.strokeText(text, pos.x, pos.y);\n      }\n    }\n  }]);\n\n  return TextDrawer;\n}();\n\nexports.TextDrawer = TextDrawer;","map":null,"metadata":{},"sourceType":"script"}