{"ast":null,"code":"import React,{Component,Fragment}from'react';import{Col,Container,Row}from\"react-bootstrap\";import{BarChart,Bar,ResponsiveContainer,XAxis,Tooltip}from\"recharts\";import{CircularProgressbar,buildStyles}from'react-circular-progressbar';import'react-circular-progressbar/dist/styles.css';import VisibilitySensor from\"react-visibility-sensor\";function Skills(props){var data=props.portfolioData;var skillList;skillList=data.skills.map(function(s,i){return/*#__PURE__*/React.createElement(\"div\",{className:\"col-2\",key:i},/*#__PURE__*/React.createElement(\"div\",{className:\"site-skill\"},/*#__PURE__*/React.createElement(\"div\",{className:\"site-skill__canvas-wrapper\"},/*#__PURE__*/React.createElement(VisibilitySensor,null,function(_ref){var isVisible=_ref.isVisible;var percentage=isVisible?s.percentage:0;return/*#__PURE__*/React.createElement(CircularProgressbar,{value:percentage,text:\"\".concat(percentage,\"%\"),className:\"site-skill__canvas\",styles:buildStyles({// Text size\ntextSize:'2rem',// How long animation takes to go from one percentage to another, in seconds\npathTransitionDuration:1})});})),/*#__PURE__*/React.createElement(\"div\",{className:\"site-skill__text\"},\" \",s.name)));});return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(Container,{className:\"text-center\"},/*#__PURE__*/React.createElement(\"h1\",{className:\"serviceMainTitle\"},\"Skill\"),/*#__PURE__*/React.createElement(Row,null,skillList)));}export default Skills;","map":{"version":3,"sources":["/home/ridoy/Documents/My Project/Port/my-site/src/components/Skills/Skills.js"],"names":["React","Component","Fragment","Col","Container","Row","BarChart","Bar","ResponsiveContainer","XAxis","Tooltip","CircularProgressbar","buildStyles","VisibilitySensor","Skills","props","data","portfolioData","skillList","skills","map","s","i","isVisible","percentage","textSize","pathTransitionDuration","name"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,CAAyBC,QAAzB,KAAwC,OAAxC,CACA,OAAQC,GAAR,CAAaC,SAAb,CAAwBC,GAAxB,KAAkC,iBAAlC,CACA,OAAQC,QAAR,CAAkBC,GAAlB,CAAuBC,mBAAvB,CAA4CC,KAA5C,CAAmDC,OAAnD,KAAiE,UAAjE,CACA,OAASC,mBAAT,CAA8BC,WAA9B,KAAkD,4BAAlD,CACA,MAAO,4CAAP,CACA,MAAOC,CAAAA,gBAAP,KAA6B,yBAA7B,CACA,QAASC,CAAAA,MAAT,CAAgBC,KAAhB,CAAuB,CAEnB,GAAMC,CAAAA,IAAI,CAAGD,KAAK,CAACE,aAAnB,CACA,GAAIC,CAAAA,SAAJ,CAEAA,SAAS,CAAGF,IAAI,CAACG,MAAL,CAAYC,GAAZ,CAAgB,SAACC,CAAD,CAAIC,CAAJ,qBACtB,2BAAK,SAAS,CAAC,OAAf,CAAuB,GAAG,CAAEA,CAA5B,eACE,2BAAK,SAAS,CAAC,YAAf,eACE,2BAAK,SAAS,CAAC,4BAAf,eACJ,oBAAC,gBAAD,MACG,cAAmB,IAAhBC,CAAAA,SAAgB,MAAhBA,SAAgB,CAClB,GAAMC,CAAAA,UAAU,CAAGD,SAAS,CAAGF,CAAC,CAACG,UAAL,CAAkB,CAA9C,CACA,mBACE,oBAAC,mBAAD,EACE,KAAK,CAAGA,UADV,CAEE,IAAI,WAAMA,UAAN,KAFN,CAGE,SAAS,CAAC,oBAHZ,CAIE,MAAM,CAAEZ,WAAW,CAAC,CAClB;AACAa,QAAQ,CAAE,MAFQ,CAGlB;AACAC,sBAAsB,CAAE,CAJN,CAAD,CAJrB,EADF,CAaD,CAhBH,CADI,CADF,cAqBE,2BAAK,SAAS,CAAC,kBAAf,MAAoCL,CAAC,CAACM,IAAtC,CArBF,CADF,CADsB,EAAhB,CAAZ,CA2BA,mBACI,oBAAC,QAAD,mBAEQ,oBAAC,SAAD,EAAW,SAAS,CAAC,aAArB,eACA,0BAAI,SAAS,CAAC,kBAAd,UADA,cAEA,oBAAC,GAAD,MACET,SADF,CAFA,CAFR,CADJ,CAWH,CAED,cAAeJ,CAAAA,MAAf","sourcesContent":["import React, {Component,Fragment} from 'react';\r\nimport {Col, Container, Row} from \"react-bootstrap\";\r\nimport {BarChart, Bar, ResponsiveContainer, XAxis, Tooltip} from \"recharts\";\r\nimport { CircularProgressbar, buildStyles  } from 'react-circular-progressbar';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\nimport VisibilitySensor from \"react-visibility-sensor\";\r\nfunction Skills(props) {\r\n\r\n    const data = props.portfolioData;\r\n    let skillList;\r\n\r\n    skillList = data.skills.map((s, i) => (\r\n          <div className=\"col-2\" key={i}>\r\n            <div className=\"site-skill\">\r\n              <div className=\"site-skill__canvas-wrapper\">\r\n          <VisibilitySensor>\r\n            {({ isVisible }) => {\r\n              const percentage = isVisible ? s.percentage : 0;\r\n              return (\r\n                <CircularProgressbar\r\n                  value={ percentage } \r\n                  text={`${ percentage }%`} \r\n                  className=\"site-skill__canvas\" \r\n                  styles={buildStyles({                 \r\n                    // Text size\r\n                    textSize: '2rem',\r\n                    // How long animation takes to go from one percentage to another, in seconds\r\n                    pathTransitionDuration: 1,\r\n                  })}                                \r\n                 />  \r\n                  );\r\n            }}\r\n            </VisibilitySensor> \r\n              </div>\r\n              <div className=\"site-skill__text\"> {s.name}</div>\r\n            </div>           \r\n          </div>          \r\n    ));\r\n    return (\r\n        <Fragment>\r\n               \r\n                <Container className=\"text-center\">\r\n                <h1 className=\"serviceMainTitle\">Skill</h1>\r\n                <Row>\r\n                { skillList } \r\n                </Row>\r\n                </Container>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Skills\r\n"]},"metadata":{},"sourceType":"module"}