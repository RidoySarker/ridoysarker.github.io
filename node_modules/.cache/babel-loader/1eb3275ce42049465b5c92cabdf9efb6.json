{"ast":null,"code":"var _jsxFileName = \"/home/ridoy/Documents/My Project/Port/my-site/src/components/Analysis/Analysis.js\";\nimport React, { Component, Fragment } from 'react';\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport { BarChart, Bar, ResponsiveContainer, XAxis, Tooltip } from \"recharts\";\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\n\nfunction Analysis() {\n  const percentage = 66;\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CircularProgressbar, {\n    value: percentage,\n    text: `${percentage}%`,\n    styles: buildStyles({\n      // Rotation of path and trail, in number of turns (0-1)\n      rotation: 0.25,\n      // Whether to use rounded or flat corners on the ends - can use 'butt' or 'round'\n      strokeLinecap: 'butt',\n      // Text size\n      textSize: '16px',\n      // How long animation takes to go from one percentage to another, in seconds\n      pathTransitionDuration: 0.5,\n      // Can specify path transition in more detail, or remove it entirely\n      // pathTransition: 'none',\n      // Colors\n      pathColor: `rgba(62, 152, 199, ${percentage / 100})`,\n      textColor: '#f88',\n      trailColor: '#d6d6d6',\n      backgroundColor: '#3e98c7'\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }\n  }), \";\");\n}\n\nexport default Analysis;","map":{"version":3,"sources":["/home/ridoy/Documents/My Project/Port/my-site/src/components/Analysis/Analysis.js"],"names":["React","Component","Fragment","Col","Container","Row","BarChart","Bar","ResponsiveContainer","XAxis","Tooltip","CircularProgressbar","buildStyles","Analysis","percentage","rotation","strokeLinecap","textSize","pathTransitionDuration","pathColor","textColor","trailColor","backgroundColor"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAAyBC,QAAzB,QAAwC,OAAxC;AACA,SAAQC,GAAR,EAAaC,SAAb,EAAwBC,GAAxB,QAAkC,iBAAlC;AACA,SAAQC,QAAR,EAAkBC,GAAlB,EAAuBC,mBAAvB,EAA4CC,KAA5C,EAAmDC,OAAnD,QAAiE,UAAjE;AACA,SAASC,mBAAT,EAA8BC,WAA9B,QAAkD,4BAAlD;AACA,OAAO,4CAAP;;AAEA,SAASC,QAAT,GAAoB;AAChB,QAAMC,UAAU,GAAG,EAAnB;AACA,sBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG,oBAAC,mBAAD;AACT,IAAA,KAAK,EAAEA,UADE;AAET,IAAA,IAAI,EAAG,GAAEA,UAAW,GAFX;AAGT,IAAA,MAAM,EAAEF,WAAW,CAAC;AAClB;AACAG,MAAAA,QAAQ,EAAE,IAFQ;AAIlB;AACAC,MAAAA,aAAa,EAAE,MALG;AAOlB;AACAC,MAAAA,QAAQ,EAAE,MARQ;AAUlB;AACAC,MAAAA,sBAAsB,EAAE,GAXN;AAalB;AACA;AAEA;AACAC,MAAAA,SAAS,EAAG,sBAAqBL,UAAU,GAAG,GAAI,GAjBhC;AAkBlBM,MAAAA,SAAS,EAAE,MAlBO;AAmBlBC,MAAAA,UAAU,EAAE,SAnBM;AAoBlBC,MAAAA,eAAe,EAAE;AApBC,KAAD,CAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,MADJ;AA8BH;;AAED,eAAeT,QAAf","sourcesContent":["import React, {Component,Fragment} from 'react';\r\nimport {Col, Container, Row} from \"react-bootstrap\";\r\nimport {BarChart, Bar, ResponsiveContainer, XAxis, Tooltip} from \"recharts\";\r\nimport { CircularProgressbar, buildStyles  } from 'react-circular-progressbar';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\n\r\nfunction Analysis() {\r\n    const percentage = 66;\r\n    return (\r\n        <Fragment>\r\n           <CircularProgressbar\r\n  value={percentage}\r\n  text={`${percentage}%`}\r\n  styles={buildStyles({\r\n    // Rotation of path and trail, in number of turns (0-1)\r\n    rotation: 0.25,\r\n \r\n    // Whether to use rounded or flat corners on the ends - can use 'butt' or 'round'\r\n    strokeLinecap: 'butt',\r\n \r\n    // Text size\r\n    textSize: '16px',\r\n \r\n    // How long animation takes to go from one percentage to another, in seconds\r\n    pathTransitionDuration: 0.5,\r\n \r\n    // Can specify path transition in more detail, or remove it entirely\r\n    // pathTransition: 'none',\r\n \r\n    // Colors\r\n    pathColor: `rgba(62, 152, 199, ${percentage / 100})`,\r\n    textColor: '#f88',\r\n    trailColor: '#d6d6d6',\r\n    backgroundColor: '#3e98c7',\r\n  })}\r\n/>;\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Analysis\r\n"]},"metadata":{},"sourceType":"module"}