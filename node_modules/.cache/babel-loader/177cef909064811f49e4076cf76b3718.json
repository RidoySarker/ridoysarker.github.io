{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/home/ridoy/Documents/My Project/Port/my-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _slicedToArray = require(\"/home/ridoy/Documents/My Project/Port/my-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _createForOfIteratorHelper = require(\"/home/ridoy/Documents/My Project/Port/my-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _classCallCheck = require(\"/home/ridoy/Documents/My Project/Port/my-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/ridoy/Documents/My Project/Port/my-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Container = void 0;\n\nvar tslib_1 = require(\"tslib\");\n\nvar Canvas_1 = require(\"./Canvas\");\n\nvar Particles_1 = require(\"./Particles\");\n\nvar Retina_1 = require(\"./Retina\");\n\nvar FrameManager_1 = require(\"./FrameManager\");\n\nvar Options_1 = require(\"../Options/Classes/Options\");\n\nvar Utils_1 = require(\"../Utils\");\n\nvar Container = /*#__PURE__*/function () {\n  function Container(id, sourceOptions) {\n    _classCallCheck(this, Container);\n\n    this.id = id;\n    this.sourceOptions = sourceOptions;\n    this.started = false;\n    this.destroyed = false;\n    this.paused = true;\n    this.lastFrameTime = 0;\n    this.pageHidden = false;\n    this.retina = new Retina_1.Retina(this);\n    this.canvas = new Canvas_1.Canvas(this);\n    this.particles = new Particles_1.Particles(this);\n    this.drawer = new FrameManager_1.FrameManager(this);\n    this.noise = {\n      generate: function generate() {\n        return {\n          angle: Math.random() * Math.PI * 2,\n          length: Math.random()\n        };\n      },\n      init: function init() {},\n      update: function update() {}\n    };\n    this.interactivity = {\n      mouse: {\n        clicking: false,\n        inside: false\n      }\n    };\n    this.bubble = {};\n    this.repulse = {\n      particles: []\n    };\n    this.attract = {\n      particles: []\n    };\n    this.plugins = new Map();\n    this.drawers = new Map();\n    this.density = 1;\n    this.options = new Options_1.Options();\n\n    for (var _len = arguments.length, presets = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      presets[_key - 2] = arguments[_key];\n    }\n\n    for (var _i = 0, _presets = presets; _i < _presets.length; _i++) {\n      var preset = _presets[_i];\n      this.options.load(Utils_1.Plugins.getPreset(preset));\n    }\n\n    var shapes = Utils_1.Plugins.getSupportedShapes();\n\n    var _iterator = _createForOfIteratorHelper(shapes),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var type = _step.value;\n        var drawer = Utils_1.Plugins.getShapeDrawer(type);\n\n        if (drawer) {\n          this.drawers.set(type, drawer);\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    if (this.sourceOptions) {\n      this.options.load(this.sourceOptions);\n    }\n\n    this.eventListeners = new Utils_1.EventListeners(this);\n  }\n\n  _createClass(Container, [{\n    key: \"play\",\n    value: function play(force) {\n      var needsUpdate = this.paused || force;\n\n      if (this.paused) {\n        this.paused = false;\n      }\n\n      if (needsUpdate) {\n        var _iterator2 = _createForOfIteratorHelper(this.plugins),\n            _step2;\n\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var _step2$value = _slicedToArray(_step2.value, 2),\n                plugin = _step2$value[1];\n\n            if (plugin.play) {\n              plugin.play();\n            }\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n\n        this.lastFrameTime = performance.now();\n      }\n\n      this.draw();\n    }\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      if (this.drawAnimationFrame !== undefined) {\n        Utils_1.Utils.cancelAnimation(this.drawAnimationFrame);\n        delete this.drawAnimationFrame;\n      }\n\n      if (this.paused) {\n        return;\n      }\n\n      var _iterator3 = _createForOfIteratorHelper(this.plugins),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var _step3$value = _slicedToArray(_step3.value, 2),\n              plugin = _step3$value[1];\n\n          if (plugin.pause) {\n            plugin.pause();\n          }\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n\n      if (!this.pageHidden) {\n        this.paused = true;\n      }\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var _this = this;\n\n      this.drawAnimationFrame = Utils_1.Utils.animate(function (t) {\n        var _a;\n\n        return (_a = _this.drawer) === null || _a === void 0 ? void 0 : _a.nextFrame(t);\n      });\n    }\n  }, {\n    key: \"getAnimationStatus\",\n    value: function getAnimationStatus() {\n      return !this.paused;\n    }\n  }, {\n    key: \"setNoise\",\n    value: function setNoise(noiseOrGenerator, init, update) {\n      if (!noiseOrGenerator) {\n        return;\n      }\n\n      if (typeof noiseOrGenerator === \"function\") {\n        this.noise.generate = noiseOrGenerator;\n\n        if (init) {\n          this.noise.init = init;\n        }\n\n        if (update) {\n          this.noise.update = update;\n        }\n      } else {\n        if (noiseOrGenerator.generate) {\n          this.noise.generate = noiseOrGenerator.generate;\n        }\n\n        if (noiseOrGenerator.init) {\n          this.noise.init = noiseOrGenerator.init;\n        }\n\n        if (noiseOrGenerator.update) {\n          this.noise.update = noiseOrGenerator.update;\n        }\n      }\n    }\n  }, {\n    key: \"densityAutoParticles\",\n    value: function densityAutoParticles() {\n      this.initDensityFactor();\n      var numberOptions = this.options.particles.number;\n      var optParticlesNumber = numberOptions.value;\n      var optParticlesLimit = numberOptions.limit > 0 ? numberOptions.limit : optParticlesNumber;\n      var particlesNumber = Math.min(optParticlesNumber, optParticlesLimit) * this.density;\n      var particlesCount = this.particles.count;\n\n      if (particlesCount < particlesNumber) {\n        this.particles.push(Math.abs(particlesNumber - particlesCount));\n      } else if (particlesCount > particlesNumber) {\n        this.particles.removeQuantity(particlesCount - particlesNumber);\n      }\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.stop();\n      this.canvas.destroy();\n      delete this.interactivity;\n      delete this.options;\n      delete this.retina;\n      delete this.canvas;\n      delete this.particles;\n      delete this.bubble;\n      delete this.repulse;\n      delete this.attract;\n      delete this.drawer;\n      delete this.eventListeners;\n\n      var _iterator4 = _createForOfIteratorHelper(this.drawers),\n          _step4;\n\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var _step4$value = _slicedToArray(_step4.value, 2),\n              drawer = _step4$value[1];\n\n          if (drawer.destroy) {\n            drawer.destroy(this);\n          }\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n\n      this.drawers = new Map();\n      this.destroyed = true;\n    }\n  }, {\n    key: \"exportImg\",\n    value: function exportImg(callback) {\n      this.exportImage(callback);\n    }\n  }, {\n    key: \"exportImage\",\n    value: function exportImage(callback, type, quality) {\n      var _a;\n\n      return (_a = this.canvas.element) === null || _a === void 0 ? void 0 : _a.toBlob(callback, type !== null && type !== void 0 ? type : \"image/png\", quality);\n    }\n  }, {\n    key: \"exportConfiguration\",\n    value: function exportConfiguration() {\n      return JSON.stringify(this.options, undefined, 2);\n    }\n  }, {\n    key: \"refresh\",\n    value: function refresh() {\n      return tslib_1.__awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.stop();\n                _context.next = 3;\n                return this.start();\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      if (!this.started) {\n        return;\n      }\n\n      this.started = false;\n      this.eventListeners.removeListeners();\n      this.pause();\n      this.particles.clear();\n      this.canvas.clear();\n\n      var _iterator5 = _createForOfIteratorHelper(this.plugins),\n          _step5;\n\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var _step5$value = _slicedToArray(_step5.value, 2),\n              plugin = _step5$value[1];\n\n          if (plugin.stop) {\n            plugin.stop();\n          }\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n\n      this.plugins = new Map();\n      this.particles.linksColors = new Map();\n      delete this.particles.linksColor;\n    }\n  }, {\n    key: \"start\",\n    value: function start() {\n      return tslib_1.__awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var _iterator6, _step6, _step6$value, plugin;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!this.started) {\n                  _context2.next = 2;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\");\n\n              case 2:\n                _context2.next = 4;\n                return this.init();\n\n              case 4:\n                this.started = true;\n                this.eventListeners.addListeners();\n                _iterator6 = _createForOfIteratorHelper(this.plugins);\n                _context2.prev = 7;\n\n                _iterator6.s();\n\n              case 9:\n                if ((_step6 = _iterator6.n()).done) {\n                  _context2.next = 19;\n                  break;\n                }\n\n                _step6$value = _slicedToArray(_step6.value, 2), plugin = _step6$value[1];\n\n                if (!(plugin.startAsync !== undefined)) {\n                  _context2.next = 16;\n                  break;\n                }\n\n                _context2.next = 14;\n                return plugin.startAsync();\n\n              case 14:\n                _context2.next = 17;\n                break;\n\n              case 16:\n                if (plugin.start !== undefined) {\n                  plugin.start();\n                }\n\n              case 17:\n                _context2.next = 9;\n                break;\n\n              case 19:\n                _context2.next = 24;\n                break;\n\n              case 21:\n                _context2.prev = 21;\n                _context2.t0 = _context2[\"catch\"](7);\n\n                _iterator6.e(_context2.t0);\n\n              case 24:\n                _context2.prev = 24;\n\n                _iterator6.f();\n\n                return _context2.finish(24);\n\n              case 27:\n                this.play();\n\n              case 28:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[7, 21, 24, 27]]);\n      }));\n    }\n  }, {\n    key: \"init\",\n    value: function init() {\n      return tslib_1.__awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var availablePlugins, _iterator7, _step7, _step7$value, id, plugin, _iterator8, _step8, _step8$value, drawer, _iterator9, _step9, _step9$value, _plugin;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                this.retina.init();\n                this.canvas.init();\n                availablePlugins = Utils_1.Plugins.getAvailablePlugins(this);\n                _iterator7 = _createForOfIteratorHelper(availablePlugins);\n\n                try {\n                  for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n                    _step7$value = _slicedToArray(_step7.value, 2), id = _step7$value[0], plugin = _step7$value[1];\n                    this.plugins.set(id, plugin);\n                  }\n                } catch (err) {\n                  _iterator7.e(err);\n                } finally {\n                  _iterator7.f();\n                }\n\n                _iterator8 = _createForOfIteratorHelper(this.drawers);\n                _context3.prev = 6;\n\n                _iterator8.s();\n\n              case 8:\n                if ((_step8 = _iterator8.n()).done) {\n                  _context3.next = 15;\n                  break;\n                }\n\n                _step8$value = _slicedToArray(_step8.value, 2), drawer = _step8$value[1];\n\n                if (!drawer.init) {\n                  _context3.next = 13;\n                  break;\n                }\n\n                _context3.next = 13;\n                return drawer.init(this);\n\n              case 13:\n                _context3.next = 8;\n                break;\n\n              case 15:\n                _context3.next = 20;\n                break;\n\n              case 17:\n                _context3.prev = 17;\n                _context3.t0 = _context3[\"catch\"](6);\n\n                _iterator8.e(_context3.t0);\n\n              case 20:\n                _context3.prev = 20;\n\n                _iterator8.f();\n\n                return _context3.finish(20);\n\n              case 23:\n                _iterator9 = _createForOfIteratorHelper(this.plugins);\n                _context3.prev = 24;\n\n                _iterator9.s();\n\n              case 26:\n                if ((_step9 = _iterator9.n()).done) {\n                  _context3.next = 37;\n                  break;\n                }\n\n                _step9$value = _slicedToArray(_step9.value, 2), _plugin = _step9$value[1];\n\n                if (!_plugin.init) {\n                  _context3.next = 32;\n                  break;\n                }\n\n                _plugin.init(this.options);\n\n                _context3.next = 35;\n                break;\n\n              case 32:\n                if (!(_plugin.initAsync !== undefined)) {\n                  _context3.next = 35;\n                  break;\n                }\n\n                _context3.next = 35;\n                return _plugin.initAsync(this.options);\n\n              case 35:\n                _context3.next = 26;\n                break;\n\n              case 37:\n                _context3.next = 42;\n                break;\n\n              case 39:\n                _context3.prev = 39;\n                _context3.t1 = _context3[\"catch\"](24);\n\n                _iterator9.e(_context3.t1);\n\n              case 42:\n                _context3.prev = 42;\n\n                _iterator9.f();\n\n                return _context3.finish(42);\n\n              case 45:\n                this.particles.init();\n                this.densityAutoParticles();\n\n              case 47:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[6, 17, 20, 23], [24, 39, 42, 45]]);\n      }));\n    }\n  }, {\n    key: \"initDensityFactor\",\n    value: function initDensityFactor() {\n      var densityOptions = this.options.particles.number.density;\n\n      if (!this.canvas.element || !densityOptions.enable) {\n        return;\n      }\n\n      var canvas = this.canvas.element;\n      var pxRatio = this.retina.pixelRatio;\n      this.density = canvas.width * canvas.height / (densityOptions.factor * pxRatio * densityOptions.area);\n    }\n  }]);\n\n  return Container;\n}();\n\nexports.Container = Container;","map":null,"metadata":{},"sourceType":"script"}